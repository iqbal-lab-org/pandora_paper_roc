from pathlib import Path
from snakemake.utils import min_version

min_version("5.1.0")

# ======================================================
# Config files
# ======================================================
configfile: "config.yaml"



# ======================================================
# Global vars
# ======================================================
singularity_image = config["singularity_image"]
data_folder = Path(config["data_folder"])
PRGs = [Path(PRG) for PRG in config["PRGs"]]
window_size = int(config["window_size"])
kmer_size = int(config["kmer_size"])
threads = config["threads"]
benchmark_repeat_times = config["benchmark_repeat_times"]
all_reads_to_map = [Path(reads_to_map) for reads_to_map in config["reads_to_map"]]
all_samples_to_map = [Path(samples_to_map) for samples_to_map in config["samples_to_map"]]
mem_mb = int(config["mem_mb"])

# ======================================================
# Output files
# ======================================================
files = []

def add_files_for_copy_PRG_to_output_folder_rule():
    for PRG in PRGs:
        for thread in threads:
            files.append(f"analysis/PRGs/{PRG}---threads_{thread}/{PRG}")
add_files_for_copy_PRG_to_output_folder_rule()


def add_files_for_index_PRG_rule():
    for PRG in PRGs:
        for thread in threads:
            files.append(f"analysis/index/{PRG}---threads_{thread}.index_done_flag")
add_files_for_index_PRG_rule()


def add_files_for_map_rule():
    for PRG, reads_to_map in zip(PRGs, all_reads_to_map):
        for thread in threads:
            files.append(f"analysis/map/{PRG}---threads_{thread}---reads_{reads_to_map}.map_reads_to_PRG.done")
            files.append(f"analysis/map/{PRG}---threads_{thread}---reads_{reads_to_map}")
add_files_for_map_rule()


def add_files_for_compare_rule():
    for PRG, samples_to_map in zip(PRGs, all_samples_to_map):
        for thread in threads:
            files.append(f"analysis/compare/{PRG}---threads_{thread}---samples_{samples_to_map}.compare_samples.done")
            files.append(f"analysis/compare/{PRG}---threads_{thread}---samples_{samples_to_map}")
add_files_for_compare_rule()

# ======================================================
# Rules
# ======================================================
rule all:
    input: files

rules_dir = Path("rules/")
include: str(rules_dir / "pandora.smk")